<entityStoreData xmlns="http://www.vordel.com/2005/06/24/entityStore">
<metaInfo flags="138">
	<exportRoots>
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
			</key>
		</key>
		<key type='ESConfiguration'>
			<id field='name' value='Entity Store Configuration'/>
		</key>
	</exportRoots>
	<typeVersions>
		<type name="AttributeCompare" version="1"/>
		<type name="AttributeExtractHTTPHeaderFilter" version="0"/>
		<type name="ChangeMessageFilter" version="0"/>
		<type name="CircuitContainer" version="1"/>
		<type name="CompareAttributeFilter" version="0"/>
		<type name="ConversionFilter" version="0"/>
		<type name="CopyAttribute" version="0"/>
		<type name="CopyAttributeFilter" version="1"/>
		<type name="ESConfiguration" version="27"/>
		<type name="Entity" version="0"/>
		<type name="Filter" version="5"/>
		<type name="FilterCircuit" version="4"/>
		<type name="JavaScriptFilter" version="3"/>
		<type name="Reflector" version="0"/>
		<type name="RootChild" version="0"/>
		<type name="SelectorFilter" version="1"/>
		<type name="SetAttributeFilter" version="0"/>
		<type name="SetHTTPStatusCode" version="0"/>
	</typeVersions>
	<realizedTypes><![CDATA[
<entityStoreData>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="RootChild"/>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="ESConfiguration">
        <constant name="_version" type="integer" value="27"/>
        <!--
            Give this singleton a key.
        -->
        <field isKey="true" name="name" type="string"/>
        <!-- 
            We use this field to verify that the passphrase for the 
            encryped data is synchronized between the server and client, and
            between multiple invocations of the client
        -->
        <field name="passphraseTest" type="encrypted"/>
        <field name="version" type="string"/>
        <!-- The product key should never change for the lifetime of the product -->
        <field name="productKey" type="string"/>
        <field cardinality="?" name="gitrev" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="CircuitContainer">
    <constant name="_version" type="integer" value="1"/>
    <componentType cardinality="*" name="FilterCircuit"/>
    <componentType cardinality="*" name="CircuitContainer"/>
    <componentType cardinality="*" name="MVProperty"/>
    <field isKey="true" name="name" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="FilterCircuit">
        <constant name="_version" type="integer" value="4"/>
		<componentType cardinality="*" name="Filter"/>
		<componentType cardinality="1" name="BoundCircuit"/>
		<componentType cardinality="*" name="Property"/>
		<field cardinality="1" name="start" type="@Filter"/>
		<field cardinality="?" name="fault" type="@Filter"/>
		<field isKey="true" name="name" type="string"/>
		<field cardinality="1" default="3" name="logMask" type="integer"/>

		<field cardinality="?" name="description" type="string"/>		
		<field cardinality="1" name="category" type="@PolicyCategory">
            <defaultRef>
                <key type="PolicyCategoryGroup">
                  <id field="name" value="Policy Categories"/>
                  <key type="PolicyCategory">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Entity" name="CopyAttribute">
        <constant name="_version" type="integer" value="0"/>
        <!-- Key fields -->
        <field cardinality="1" isKey="true" name="fromAttributeName" type="string"/>   
        <field cardinality="1" default="" isKey="true" name="fromAttributeNamespace" type="string"/>   
        <field cardinality="1" default="" isKey="true" name="toAttributeName" type="string"/>   
        <field cardinality="1" default="" isKey="true" name="toAttributeNamespace" type="string"/>
        <!-- Other fields -->    
        <field cardinality="?" name="attributeValue" type="string"/>
        <field cardinality="1" default="1" name="fromAttributeLocation" type="integer"/>   
        <field cardinality="1" default="1" name="toAttributeLocation" type="integer"/>           
        <field cardinality="1" default="0" name="toListAttribute" type="boolean"/>          
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="false" extends="Entity" name="AttributeCompare">
      <constant name="_version" type="integer" value="1"/>
      <field isKey="true" name="attrName" type="string"/>
      <field default="CONTAINS" isKey="true" name="matchType" type="string"/>
      <field isKey="true" name="expression" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="Filter">
        <constant name="_version" type="integer" value="5"/>
        <field cardinality="?" name="successNode" type="@Filter"/>
        <field cardinality="?" name="failureNode" type="@Filter"/>
        <field isKey="true" name="name" type="string"/>
        <field cardinality="1" default="2" name="logMask" type="integer"/>
        <field cardinality="1" default="Filter aborted due to exception" name="logFatal" type="string"/>
        <field cardinality="1" default="Filter failed" name="logFailure" type="string"/>
        <field cardinality="1" default="Filter passed" name="logSuccess" type="string"/>
        <field cardinality="1" name="category" type="@Category">
            <defaultRef>
                <key type="CategoryGroup">
                  <id field="name" value="Filter Categories"/>
                  <key type="Category">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
      <field cardinality="1" default="0" name="abortProcessingOnLogError" type="boolean"/>
      <field cardinality="1" default="SERVICE" name="logMaskType" type="string"/>
      <field cardinality="*" name="classloader" type="^ClassLoader"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SetAttributeFilter">
        <constant name="_version" type="integer" value="0"/>
  
    <!-- Name of the Filter class that encapsulates this configuration entity -->
    <constant name="class" type="string" value="com.vordel.circuit.attribute.SetAttributeFilter"/>
    
    <!-- List of the configuration parameters, their types, and their default values -->
    <field cardinality="1" default="" name="messageAttribute" type="string"/>	
    <field cardinality="1" default="" name="attributeValue" type="string"/>	
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SelectorFilter">
        <constant name="_version" type="integer" value="1"/>
            <constant name="class" type="string" value="com.vordel.circuit.basic.SelectorFilter"/>
            <field cardinality="1" default="${1 + 1 == 2}" name="expression" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CopyAttributeFilter">
        <constant name="_version" type="integer" value="1"/>
        <constant name="class" type="string" value="com.vordel.circuit.attribute.CopyAttributeFilter"/>    
	    <componentType cardinality="+" name="CopyAttribute"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Filter" name="ConversionFilter">
        <constant name="_version" type="integer" value="0"/>
		<field cardinality="?" name="outputContentType" type="string"/> 
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="ConversionFilter" name="ChangeMessageFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.conversion.ChangeMessageFilter"/>
		<field cardinality="1" default="" name="body" type="string"/>	
         </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="AttributeExtractHTTPHeaderFilter">
        <constant name="_version" type="integer" value="0"/>
    <constant name="class" type="string" value="com.vordel.circuit.attribute.AttributeExtractHTTPHeaderFilter"/>
    <field cardinality="1" name="headerName" type="string"/>
    <field cardinality="1" name="attributeName" type="string"/>
    <field cardinality="1" default="0" name="base64Decode" type="boolean"/>
    <field cardinality="1" default="0" name="useQueryParameter" type="boolean"/>
    <!-- Override the category to give it a different default -->
    <field cardinality="1" name="category" type="@Category">
      <defaultRef>
        <key type="CategoryGroup">
          <id field="name" value="Filter Categories"/>
          <key type="Category">
            <id field="name" value="attribute"/>
          </key>
        </key>
      </defaultRef>
    </field>    
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="JavaScriptFilter">
        <constant name="_version" type="integer" value="3"/>
	<constant name="class" type="string" value="com.vordel.circuit.script.ScriptFilter"/>
	<field cardinality="1" default="function invoke(msg)         {            return true;         }" name="script" type="string"/>
	<field cardinality="1" default="nashorn" name="engineName" type="string"/>
        <field cardinality="*" name="requiredProperties" type="string"/>
        <field cardinality="*" name="generatedProperties" type="string"/>
        <field cardinality="*" name="consumedProperties" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CompareAttributeFilter">
        <constant name="_version" type="integer" value="0"/>
        <constant name="class" type="string" value="com.vordel.circuit.attribute.CompareAttributeFilter"/>
        <componentType name="AttributeCompare"/>
        <field default="MATCH_ALL" name="matchingRule" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SetHTTPStatusCode">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.SetHTTPStatusFilter"/>
        <field cardinality="1" default="200" name="httpResponseStatus" type="integer"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="SetHTTPStatusCode" name="Reflector">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.ReflectFilter"/>
	</entityType>
</entityStoreData>
	]]></realizedTypes>
</metaInfo>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitContainer">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
	</key>
	<fval name="name"><value>Healthcheck</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
		</key>
	</key>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value>Checks all API Manager components of an individual API Gateway for availability</value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="name"><value>Health Check API-Gateway</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='AttributeExtractHTTPHeaderFilter'>
						<id field='name' value='Check Reply MimeType'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>Health Check für den API-Manager&#xD;&#xA;Jedes API Gateway, dass einen API-Manager der gleichen Gruppe hostet, testet alle&#xD;&#xA;unbedingt benötigten Komponenten auf Verfügbarkeit.&#xD;&#xA;Ein Load-Balancer soll so frühzeitig über den Status eine API Gateway in der Gruppe&#xD;&#xA;informiert werden. Damit wird u.a. Zero-Downtime Deployment von Policy Packages&#xD;&#xA;(FED&apos;s) organisert.&#xD;&#xA;&#xD;&#xA;Aktuell geprüfte Komponenten:&#xD;&#xA;- API Gateway selbst (Maintenance Mode - kurz vor Policy Deplyoment)&#xD;&#xA;- Cassandra (Seed) Nodes aus dem für API-Manager genutzten Cluster&#xD;&#xA;&#xD;&#xA;Die Konfigurationsdaten werden in der API Gateway Konfigutaionsdatei&#xD;&#xA;&quot;envSettings.props&quot; erwartet. Falls diese Parameter während des&#xD;&#xA;Policy Deployments bzw. beim Start des API Gateway nicht gefunden werden&#xD;&#xA;können, erzeugt das API-Gateway entsprechende Fehler im TRACE Log.&#xD;&#xA;Dies ist als Hinweis zu werten. Trotzdem KANN die Konfiguration funktionieren,&#xD;&#xA;wenn die Cassandra Konfiguration nicht über diese Variablen erfolgt ist.&#xD;&#xA;Damit das zumindest für den Cassandra Server Port so laufen kann, wird in der Policy&#xD;&#xA;der Standardwert &quot;9160&quot; gesetzt, falls nicht vorhanden. Ist in den Properties ein anderer&#xD;&#xA;Wert vorhanden, überschreibt dieser den Standardwert.&#xD;&#xA;&#xD;&#xA;Auszug envSettings.props:&#xD;&#xA;...&#xD;&#xA;# Cassandra Hosts for local instance&#xD;&#xA;env.CASSANDRA.SERVER.PORT=9160&#xD;&#xA;#env.CASSANDRA.SERVER.PORT=9042&#xD;&#xA;env.CASSANDRA.SERVER1=sv236843.zit.intranet.com&#xD;&#xA;env.CASSANDRA.SERVER2=sv236843.zit.intranet.com&#xD;&#xA;env.CASSANDRA.SERVER3=sv236843.zit.intranet.com&#xD;&#xA;...&#xD;&#xA;&#xD;&#xA;Die Cassandra Seed Hosts sollten ebenfalls über die Environment-Variable gesetzt werden!&#xD;&#xA;Beispiel:&#xD;&#xA;Host: $ {env.CASSANDRA.SERVER1} , Posrt: $ {env.CASSANDRA.SERVER.PORT}&#xD;&#xA;Host: $ {env.CASSANDRA.SERVER2} , Posrt: $ {env.CASSANDRA.SERVER.PORT}&#xD;&#xA;Host: $ {env.CASSANDRA.SERVER3} , Posrt: $ {env.CASSANDRA.SERVER.PORT}&#xD;&#xA;</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Documentation</value></fval>
	<fval name="outputContentType"><value>plain/text</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='AttributeExtractHTTPHeaderFilter'>
						<id field='name' value='Check Reply MimeType'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>&lt;status&gt;ok&lt;/status&gt;</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Set Message - OK XML</value></fval>
	<fval name="outputContentType"><value>application/xml</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='Reflector'>
						<id field='name' value='Reflect - OK'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Cassandra host parameters not found within envSettings.props </value></fval>
	<fval name="logFatal"><value>Error occurred while copying attributes. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>FILTER</value></fval>
	<fval name="logSuccess"><value>Copied attributes successfully</value></fval>
	<fval name="name"><value>Copy / Modify Attributes</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='JavaScriptFilter'>
						<id field='name' value='Check Cassandra Node Availability'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
				<key type='CopyAttributeFilter'>
					<id field='name' value='Copy / Modify Attributes'/>
				</key>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>${env.CASSANDRA.SERVER3}</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>cassandraC</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
				<key type='CopyAttributeFilter'>
					<id field='name' value='Copy / Modify Attributes'/>
				</key>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>${env.CASSANDRA.SERVER2}</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>cassandraB</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
				<key type='CopyAttributeFilter'>
					<id field='name' value='Copy / Modify Attributes'/>
				</key>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>${env.CASSANDRA.SERVER.PORT}</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>cassandraPort</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
				<key type='CopyAttributeFilter'>
					<id field='name' value='Copy / Modify Attributes'/>
				</key>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>${env.CASSANDRA.SERVER1}</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>cassandraA</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SetAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="attributeValue"><value>application/xml</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to set the attribute value</value></fval>
	<fval name="logFatal"><value>Error while setting the attribute value. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Set the attribute value</value></fval>
	<fval name="messageAttribute"><value>reply.mimetype</value></fval>
	<fval name="name"><value>Set Default Reply MimeType</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='JavaScriptFilter'>
						<id field='name' value='Remove HTTP Headers'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>{ &quot;status&quot; : &quot;error&quot; }</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Set Message - Health Check Error JSON</value></fval>
	<fval name="outputContentType"><value>application/json</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='Reflector'>
						<id field='name' value='Reflect - Error'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>{ &quot;status&quot; : &quot;maintenance&quot; }</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Set Message - Under Maintenance JSON</value></fval>
	<fval name="outputContentType"><value>application/json</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='Reflector'>
						<id field='name' value='Reflect - Unavailable'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SelectorFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="expression"><value>${reply.mimetype != &quot;application/json&quot;}</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='ChangeMessageFilter'>
						<id field='name' value='Set Message - Under Maintenance JSON'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="name"><value>Check desired reply type Maintenance</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='ChangeMessageFilter'>
						<id field='name' value='Set Message - Under Maintenance XML'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="httpResponseStatus"><value>500</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="name"><value>Reflect - Error</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>&lt;status&gt;error&lt;/status&gt;</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Set Message - Health Check Error XML</value></fval>
	<fval name="outputContentType"><value>application/xml</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='Reflector'>
						<id field='name' value='Reflect - Error'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SelectorFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="expression"><value>${reply.mimetype != &quot;application/json&quot;}</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='ChangeMessageFilter'>
						<id field='name' value='Set Message - OK JSON'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="name"><value>Check desired reply type OK</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='ChangeMessageFilter'>
						<id field='name' value='Set Message - OK XML'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="httpResponseStatus"><value>503</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="name"><value>Reflect - Unavailable</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>&lt;status&gt;maintenance&lt;/status&gt;</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Set Message - Under Maintenance XML</value></fval>
	<fval name="outputContentType"><value>application/xml</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='Reflector'>
						<id field='name' value='Reflect - Unavailable'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="AttributeExtractHTTPHeaderFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="attributeName"><value>reply.mimetype</value></fval>
	<fval name="base64Decode"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='attribute'/>
			</key>
		</key>
	</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='SetAttributeFilter'>
						<id field='name' value='Set Default Reply MimeType'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="headerName"><value>Accept</value></fval>
	<fval name="logFailure"><value>No Accept Header provided by client</value></fval>
	<fval name="logFatal"><value>Error occurred while extracting attributes from HTTP header. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>6</value></fval>
	<fval name="logMaskType"><value>FILTER</value></fval>
	<fval name="logSuccess"><value>Accept header found</value></fval>
	<fval name="name"><value>Check Reply MimeType</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='JavaScriptFilter'>
						<id field='name' value='Remove HTTP Headers'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="useQueryParameter"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SelectorFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="expression"><value>${reply.mimetype != &quot;application/json&quot;}</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='ChangeMessageFilter'>
						<id field='name' value='Set Message - Health Check Error JSON'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="name"><value>Check desired reply type Error</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='ChangeMessageFilter'>
						<id field='name' value='Set Message - Health Check Error XML'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CompareAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='SelectorFilter'>
						<id field='name' value='Check desired reply type Maintenance'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>1</value></fval>
	<fval name="logMaskType"><value>FILTER</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="matchingRule"><value>MATCH_ALL</value></fval>
	<fval name="name"><value>Check for Gateway Maintenance Mode</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='CopyAttributeFilter'>
						<id field='name' value='Copy / Modify Attributes'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="AttributeCompare">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
				<key type='CompareAttributeFilter'>
					<id field='name' value='Check for Gateway Maintenance Mode'/>
				</key>
			</key>
		</key>
	</key>
	<fval name="attrName"><value>apigw.maintenance.ongoing</value></fval>
	<fval name="expression"><value>false</value></fval>
	<fval name="matchType"><value>IS</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>{ &quot;status&quot;: &quot;ok&quot; }</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Set Message - OK JSON</value></fval>
	<fval name="outputContentType"><value>application/json</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='Reflector'>
						<id field='name' value='Reflect - OK'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="httpResponseStatus"><value>200</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="name"><value>Reflect - OK</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>groovy</value></fval>
	<fval name="generatedProperties"><value>http.headers</value></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="name"><value>Remove HTTP Headers</value></fval>
	<fval name="requiredProperties"><value>http.headers</value></fval>
	<fval name="script"><value>import com.vordel.mime.HeaderSet;&#xD;&#xA;&#xD;&#xA;def invoke(msg) &#xD;&#xA;{ &#xD;&#xA;    // def httpHeaders = (com.vordel.mime.HeaderSet) msg.get(&quot;http.headers&quot;);&#xD;&#xA;    // while (httpHeaders.getHeadersLength() != 0) {&#xD;&#xA;    //     httpHeaders.remove(httpHeaders.getNames()[0]);&#xD;&#xA;    // }&#xD;&#xA;&#xD;&#xA;    def httpHeaders = new com.vordel.mime.HeaderSet();&#xD;&#xA;    msg.put(&quot;http.headers&quot;, httpHeaders );&#xD;&#xA;&#xD;&#xA;    return true;&#xD;&#xA;}</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='CompareAttributeFilter'>
						<id field='name' value='Check for Gateway Maintenance Mode'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='API-Manager-Platform'/>
		<key type='CircuitContainer'>
			<id field='name' value='Healthcheck'/>
			<key type='FilterCircuit'>
				<id field='name' value='Health Check API-Gateway'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>groovy</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='SelectorFilter'>
						<id field='name' value='Check desired reply type Error'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="logFailure"><value>API Manager plattform healthcheck failed</value></fval>
	<fval name="logFatal"><value>API Manager plattform healthcheck OK</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>FILTER</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="name"><value>Check Cassandra Node Availability</value></fval>
	<fval name="requiredProperties">
		<value>cassandraA</value>
		<value>cassandraB</value>
		<value>cassandraC</value>
		<value>cassandraPort</value>
	</fval>
	<fval name="script"><value>import com.vordel.trace.Trace;&#xD;&#xA;import java.net.Socket;&#xD;&#xA;import java.net.InetSocketAddress;&#xD;&#xA;import java.io.IOException;&#xD;&#xA;import java.net.SocketTimeoutException;&#xD;&#xA;import java.nio.channels.IllegalBlockingModeException;&#xD;&#xA;import java.lang.IllegalArgumentException;&#xD;&#xA;&#xD;&#xA;public static boolean hostAvailabilityCheck(String server, int port) { &#xD;&#xA;    Boolean retVal = false;&#xD;&#xA;    Socket socket = new Socket();&#xD;&#xA;&#xD;&#xA;    try {&#xD;&#xA;        socket.connect(new InetSocketAddress(server, port), 300);&#xD;&#xA;        retVal = true;&#xD;&#xA;    } catch (IOException ex) {&#xD;&#xA;        /* ignore */&#xD;&#xA;    } catch (SocketTimeoutException ex) {&#xD;&#xA;        Trace.error(&quot;Connect test timeout error&quot;);&#xD;&#xA;    } catch (IllegalBlockingModeException ex) {&#xD;&#xA;        /* ignore */&#xD;&#xA;    } catch (IllegalArgumentException ex) {&#xD;&#xA;        Trace.error(&quot;Connect test failed because of parameter error.&quot;);&#xD;&#xA;    } finally {&#xD;&#xA;        socket.close()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    return retVal;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;def invoke(msg)        &#xD;&#xA;{&#xD;&#xA;    def nodeCnt = 0;&#xD;&#xA;    def successCnt = 0;&#xD;&#xA;    def cassandraPortStr = msg.get(&quot;cassandraPort&quot;);&#xD;&#xA;    def cassandraPort = cassandraPortStr.length() &gt; 0? Integer.parseInt(cassandraPortStr) : Integer.parseInt(&quot;9160&quot;) ;&#xD;&#xA;&#xD;&#xA;    Trace.debug(&quot;Check for Cassandra Node accessibility&quot;);&#xD;&#xA;&#xD;&#xA;    cassandraHost = msg.get(&quot;cassandraA&quot;);&#xD;&#xA;    if ( cassandraHost.length() &gt; 0 ) {&#xD;&#xA;        nodeCnt++;&#xD;&#xA;        if ( hostAvailabilityCheck( cassandraHost, cassandraPort) ) {&#xD;&#xA;            Trace.debug(&quot;Cassandra Node A is reachable&quot;);&#xD;&#xA;            successCnt++&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    cassandraHost = msg.get(&quot;cassandraB&quot;);&#xD;&#xA;    if ( cassandraHost.length() &gt; 0 ) {&#xD;&#xA;        nodeCnt++;&#xD;&#xA;        if ( hostAvailabilityCheck( cassandraHost, cassandraPort) ) {&#xD;&#xA;            Trace.debug(&quot;Cassandra Node B is reachable&quot;);&#xD;&#xA;            successCnt++&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    cassandraHost = msg.get(&quot;cassandraC&quot;);&#xD;&#xA;    if ( cassandraHost.length() &gt; 0 ) {&#xD;&#xA;        nodeCnt++;&#xD;&#xA;        if ( hostAvailabilityCheck( cassandraHost, cassandraPort) ) {&#xD;&#xA;            Trace.debug(&quot;Cassandra Node C is reachable&quot;);&#xD;&#xA;            successCnt++&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    if ( successCnt &lt;= (nodeCnt / 2) ) {&#xD;&#xA;        Trace.error(&quot;Health Check: Could not reach majority of Cassandra Nodes.&quot;);&#xD;&#xA;        return false;&#xD;&#xA;    }&#xD;&#xA;    else if ( successCnt.equals(nodeCnt) ) {&#xD;&#xA;        Trace.debug(&quot;Health Check: OK - all Cassandra cluster nodes are reachable.&quot;);&#xD;&#xA;        return true;&#xD;&#xA;    }&#xD;&#xA;    else {&#xD;&#xA;        Trace.error(&quot;Health Check: poential problem - only majority of Cassandra cluster nodes is reachable.&quot;);&#xD;&#xA;        return true;&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='API-Manager-Platform'/>
			<key type='CircuitContainer'>
				<id field='name' value='Healthcheck'/>
				<key type='FilterCircuit'>
					<id field='name' value='Health Check API-Gateway'/>
					<key type='SelectorFilter'>
						<id field='name' value='Check desired reply type OK'/>
					</key>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitContainer">
	<fval name="name"><value>API-Manager-Platform</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ESConfiguration">
	<fval name="name"><value>Entity Store Configuration</value></fval>
	<fval name="passphraseTest"><value>aHR0cDsvL3d3dy52b3JkZWwuY29t</value></fval>
	<fval name="productKey"><value>VordelGateway</value></fval>
	<fval name="version"><value>7.5.3</value></fval>
</entity>
</entityStoreData>